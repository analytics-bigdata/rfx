group 'rfx'
version '1.0'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'

sourceCompatibility = 1.8


repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile (  	
			 'io.vertx:vertx-core:3.8.1'			
  			,'io.vertx:vertx-web:3.8.1'		
			,'com.google.code.gson:gson:2.8.5'    		
			,'log4j:log4j:1.2.17'
			,'org.jsoup:jsoup:1.12.1'					
			,'org.apache.commons:commons-lang3:3.3.2'
			,'commons-net:commons-net:3.6'    		
			,'commons-io:commons-io:2.6'
			,'redis.clients:jedis:3.1.0'
			,'org.apache.httpcomponents:httpclient:4.5.9'
			,'com.google.guava:guava:22.0'
			,'org.yaml:snakeyaml:1.18'     

    		, fileTree(dir: 'lib', include: '**/*.jar')
    		
    		,'rfx:rfx-core:1.0'    		
    		,'org.apache.kafka:kafka_2.11:0.8.2.2'    	
    		,'org.databene:contiperf:2.3.4'
    		
    		)
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

ext.rfxTrackManifest = manifest {
   attributes ('Implementation-Title': 'server.http.HttpLogCollector', 
        			'Implementation-Version': version ,
        			'Main-Class': 'server.http.HttpLogCollector',
        			'Class-Path' : getClasspathStringJars() )
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

tasks.withType(Jar) {
	destinationDir = file("$rootDir/BUILD-OUTPUT")
}

def getClasspathStringJars() {
	def baseFolder = 'deps/'
    def fileNames = []
    configurations.compile.each { File file -> fileNames.add(baseFolder + file.name) }
    
    def classpath = fileNames.join(" ; ")    
    return '. ; ' + classpath + ' ; '
}

task rfxCopyRuntimeLibs(type: Copy) {  
  into "build/libs/deps"  
  from configurations.compile  
}

task rfxCopyConfigs(type: Copy) {  
  into "build/libs/configs"  
  from files('configs')
}

jar {
	dependsOn classes
    from(sourceSets.main.output) {
        include "**"
    }    
    baseName = 'rfx-track'
    manifest = project.manifest {
        from rfxTrackManifest
    }
}

task clickTrackHttpServer(type: Jar) {	
	dependsOn classes   
    from(sourceSets.test.output) {
        include "**"
    }  
    version = '1.0'
    baseName = 'click-track-server'
    manifest {
   		attributes ('Implementation-Title': 'ItemTrackHttpServer', 
        			'Implementation-Version': version ,
        			'Main-Class': 'sample.server.item.track.SimpleTrackHttpServer',
        			'Class-Path' : getClasspathStringJars() + ' ./rfx-core-master.jar ; ./rfx-track-http-server.jar ; ' )
	}
}
