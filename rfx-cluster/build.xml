<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="build-rfx-core" name="rfx-cluster">

	<!--ANT 1.7 is required -->
	
	<!--load common properties -->
	<loadproperties srcFile="build.properties"/>

	<!-- set global properties for this build -->
	<tstamp><format property='build.time' pattern='yyyy-MM-dd HH:mm:ss'/></tstamp>
	<property name="core-src" location="core-src" />	
	<property name="build" location="build" />	
	<property name="libs" location="lib" />
	<property name="resources" location="resources" />
	<property name="compiler" value="javac1.7" />
	<property name="target" value="1.7" />
	

	<property name="common_class_path" value=" . ;
		lib/akka-actor_2.10-2.3.5.jar ; 
		lib/akka-kernel_2.10-2.3.5.jar ; 
		lib/akka-remote_2.10-2.3.5.jar ; 
		lib/commons-codec-1.6.jar ; 
		lib/commons-configuration-1.8.jar ; 
		lib/commons-dbcp-1.4.jar ; 
		lib/commons-io-1.4.jar ; 
		lib/commons-lang3-3.1.jar ; 
		lib/commons-logging-1.1.3.jar ; 
		lib/commons-net-3.2.jar ; 
		lib/commons-pool2-2.2.jar ; 
		lib/config-1.2.1.jar ; 
		lib/contiperf-2.3.2.jar ; 
		lib/gson.jar ; 
		lib/hazelcast-3.2.3.jar ; 
		lib/httpclient-4.3.3.jar ; 
		lib/httpclient-cache-4.3.3.jar ; 
		lib/httpcore-4.3.2.jar ; 
		lib/httpmime-4.3.3.jar ; 
		lib/jackson-annotations-2.2.2.jar ; 
		lib/jackson-core-2.2.2.jar ; 
		lib/jackson-databind-2.2.2.jar ; 
		lib/jedis-2.5.2.jar ; 
		lib/jsoup-1.7.3.jar ; 
		lib/junit-4.11.jar ; 
		lib/kafka_2.10-0.8.0.jar ; 
		lib/kryo-2.17.jar ; 
		lib/log4j-1.2.16.jar ; 
		lib/mapdb-1.0.6.jar ; 
		lib/netty-all-4.0.20.Final.jar ; 
		lib/protobuf-java-2.5.0.jar ; 
		lib/rfx-core-master.jar ; 
		lib/scala-library.jar ; 
		lib/slf4j-api-1.6.4.jar ; 
		lib/slf4j-api-1.7.5.jar ; 
		lib/slf4j-simple-1.6.4.jar ; 
		lib/uncommons-maths-1.2.2a.jar ; 
		lib/vertx-core-2.1.2.jar ; 
		lib/vertx-hazelcast-2.1.2.jar ; 
		lib/vertx-platform-2.1.2.jar ; 
	" />
	
	<path id="classpath-for-core">
		<fileset dir="${libs}" includes="**/*.jar" />
    </path>
	<property name="class_path_for_release" value="${common_class_path} ${libs}/rfx-core-master.jar ; " />

	<target name="init" >
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}" />
	</target>
	
	<target name="clean" description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}" />
	</target>
	
	<!--  ################# core library ##################  -->
	
	<target name="compile-core-src" depends="init" description="compile the source" >
		<!-- Compile the java code from ${src} into ${build} -->
		<echo>Compiling code at /src-core ...</echo>
				
		<javac srcdir="${core-src}" destdir="${build}" classpathref="classpath-for-core" debug="on" encoding="utf-8" optimize="on" target="${target}"
				fork="yes"	executable="${javac_path}" compiler="${compiler}" />
			
		<fileset dir="${build}">
			<include name="**/rfx/*" />
		</fileset>
	</target>
	
	<target name="build-rfx-core" depends="compile-core-src">
		<!-- Core and Master Build -->
		<delete file="${libs}/rfx-core-master.jar" />
		<jar destfile="${libs}/rfx-core-master.jar" filesetmanifest="mergewithoutmain">
			<manifest>
				<attribute name="Main-Class" value="${main_class_master_starter}" />
				<attribute name="Class-Path" value="${common_class_path}" />
				<attribute name="Built-Date" value="${build.time}"/>
			</manifest>
			<fileset dir="${build}">				
			</fileset>
		</jar>	
		<delete dir="${build}" />
		<echo> ------------------------------------------------------- </echo>
		<echo>Build ${libs}/rfx-core-master.jar successfully at ${build.time}</echo>		
	</target>
	
	<!--  ################# system starters ##################  -->
	
	<target name="compile-system-starter" depends="build-rfx-core, init"  >
		<!-- Compile the java code from ${src} into ${build} -->
		<echo>Compiling system starter ...</echo>
		<mkdir dir="${build}" />
		
		<javac srcdir="starter-src" destdir="${build}" classpathref="classpath-for-core" debug="on" encoding="utf-8" optimize="on" target="${target}"
				fork="yes"	executable="${javac_path}" compiler="${compiler}" />
			
		<fileset dir="${build}">		
			
		</fileset>
	</target>
	
	<target name="build-master-node" depends="compile-system-starter">
		<!-- Core and Master Build -->
		<delete file="master-starter.jar" />		
		<jar destfile="master-starter.jar" filesetmanifest="mergewithoutmain">
			<manifest>
				<attribute name="Main-Class" value="${main_class_master_starter}" />
				<attribute name="Class-Path" value="${class_path_for_release}" />
				<attribute name="Built-Date" value="${build.time}"/>
			</manifest>
			<fileset dir="${build}">				
			</fileset>
		</jar>	
		<delete dir="${build}" />
		<echo> ------------------------------------------------------- </echo>
		<echo>Build master-starter.jar successfully</echo>		
	</target>
	
	<target name="build-supervisor-node" depends="compile-system-starter">
		<!-- Core and Master Build -->
		<delete file="supervisor-starter.jar" />		
		<jar destfile="supervisor-starter.jar" filesetmanifest="mergewithoutmain">
			<manifest>
				<attribute name="Main-Class" value="${main_class_supervisor_starter}" />
				<attribute name="Class-Path" value="${class_path_for_release}" />
				<attribute name="Built-Date" value="${build.time}"/>
			</manifest>
			<fileset dir="${build}">				
			</fileset>
		</jar>	
		<delete dir="${build}" />
		<echo> ------------------------------------------------------- </echo>
		<echo>Build supervisor-starter.jar successfully</echo>		
	</target>
	
	<target name="build-scheduled-job-node" depends="compile-system-starter">
		<!-- Core and Master Build -->
		<delete file="scheduled-job-starter.jar" />		
		<jar destfile="scheduled-job-starter.jar" filesetmanifest="mergewithoutmain">
			<manifest>
				<attribute name="Main-Class" value="${main_class_scheduledjob_starter}" />
				<attribute name="Class-Path" value="${class_path_for_release}" />
				<attribute name="Built-Date" value="${build.time}"/>
			</manifest>
			<fileset dir="${build}">
			</fileset>
		</jar>	
		<delete dir="${build}" />
		<echo> ------------------------------------------------------- </echo>
		<echo>Build scheduled-job-starter.jar successfully</echo>		
	</target>
	
	<target name="export-rfx-core-master-to-stream" depends="build-rfx-core">
		<copy todir="../stream-processor/lib">
			<fileset dir="${libs}" includes="**/rfx-core-master.jar" />
		</copy>	
		<echo>export-rfx-core-master-to-stream successfully at ${build.time}</echo>		
	</target>
	
</project>